// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

// Buat Enum Kategori
enum kategori {
  MAKANAN
  MINUMAN
}
enum ketersediaan {
  READY
  SOLDOUT
}
enum role {
  ADMIN
  KASIR
  PELANGGAN
}
enum metode_pembayaran {
  COD
  ePayment
}
model tb_menu {
  id Int @unique @id @default(autoincrement())
  nama String @db.VarChar(100)
  deskripsi String @db.Text
  harga Int @db.Int()
  kategori kategori @default(MAKANAN)
  gambar_menu String @db.Text
  ketersediaan ketersediaan @default(READY)
  keranjang tb_keranjang[]
}

model tb_user{
  id Int @unique @id @default(autoincrement())
  namaLengkap String @db.VarChar(100)
  username String @db.Char(22)
  noHp String @db.VarChar(20)
  email String @db.VarChar(50)
  alamat String @db.Text
  password String @db.VarChar(50)
  role role @default(PELANGGAN)
  keranjang tb_keranjang[]
  pemesanan tb_pemesanan[]
}

enum status {
  TRUE
  FALSE
}
model tb_keranjang{
  id Int @unique @id @default(autoincrement())
  idUser Int @db.Int
  idMenu Int @db.Int
  quantity Int @db.Int
  total Int @db.Int
  status status @default(FALSE)    // buat relasi
  user tb_user @relation(fields: [idUser], references: [id], onDelete: Cascade, onUpdate: Cascade)
  menu tb_menu @relation(fields: [idMenu], references: [id], onDelete: Cascade, onUpdate: Cascade)
  keranjang detail_pemesanan[]
}

model tb_meja{
  id Int @unique @id @default(autoincrement())
  namaMeja String @db.VarChar(20)
  meja tb_pemesanan[]
}
enum status_pemesanan {
  MENUNGGUPEMBAYARAN
  DIPROSES
  SELESAI
  DIBATALKAN
}
model tb_pemesanan{
  id Int @unique @id @default(autoincrement())
  idUser Int @db.Int
  idMeja Int @db.Int
  metode metode_pembayaran @default(COD)
  totalProduk Int @db.Int
  pajak String @db.VarChar(10)
  total Int @db.Int
  status status_pemesanan @default(MENUNGGUPEMBAYARAN)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user tb_user @relation(fields: [idUser], references: [id], onDelete: Cascade, onUpdate: Cascade)
  meja tb_meja @relation(fields: [idMeja], references: [id], onDelete: Cascade, onUpdate: Cascade)
  pemesanan detail_pemesanan[]
}

model detail_pemesanan {
  id            Int          @id @default(autoincrement())
  idPemesanan   Int          @db.Int
  idKeranjang   Int          @db.Int
  note String @db.Text
  createdAt     DateTime     @default(now())
  pemesanan     tb_pemesanan @relation(fields: [idPemesanan], references: [id], onDelete: Cascade, onUpdate: Cascade)
  keranjang     tb_keranjang @relation(fields: [idKeranjang], references: [id], onDelete: Cascade, onUpdate: Cascade)
}